{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../../../react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"../Utilities/Platform","data":{"isAsync":false}},{"name":"../StyleSheet/StyleSheet","data":{"isAsync":false}},{"name":"../Text/Text","data":{"isAsync":false}},{"name":"./Touchable/TouchableNativeFeedback","data":{"isAsync":false}},{"name":"./Touchable/TouchableOpacity","data":{"isAsync":false}},{"name":"./View/View","data":{"isAsync":false}},{"name":"invariant","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _defineProperty = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\");\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\");\n\n  var _createClass = _$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\");\n\n  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\");\n\n  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\");\n\n  var _inherits = _$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/inherits\");\n\n  var _default = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"react\")).default;\n\n  var _reactTransformHmrLibIndexJs = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"./../../../react-transform-hmr/lib/index.js\")).default;\n\n  var _jsxFileName = \"/home/arifin/Documents/react netive 10/orian/node_modules/react-native/Libraries/Components/Button.js\";\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var _components = {\n    Button: {\n      displayName: \"Button\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = _reactTransformHmrLibIndexJs({\n    filename: \"node_modules/react-native/Libraries/Components/Button.js\",\n    components: _components,\n    locals: [module],\n    imports: [_default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var Platform = _$$_REQUIRE(_dependencyMap[9], \"../Utilities/Platform\");\n\n  var React = _$$_REQUIRE(_dependencyMap[7], \"react\");\n\n  var StyleSheet = _$$_REQUIRE(_dependencyMap[10], \"../StyleSheet/StyleSheet\");\n\n  var Text = _$$_REQUIRE(_dependencyMap[11], \"../Text/Text\");\n\n  var TouchableNativeFeedback = _$$_REQUIRE(_dependencyMap[12], \"./Touchable/TouchableNativeFeedback\");\n\n  var TouchableOpacity = _$$_REQUIRE(_dependencyMap[13], \"./Touchable/TouchableOpacity\");\n\n  var View = _$$_REQUIRE(_dependencyMap[14], \"./View/View\");\n\n  var invariant = _$$_REQUIRE(_dependencyMap[15], \"invariant\");\n\n  var Button = function (_React$Component) {\n    _inherits(Button, _React$Component);\n\n    function Button() {\n      _classCallCheck(this, Button);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(Button).apply(this, arguments));\n    }\n\n    _createClass(Button, [{\n      key: \"render\",\n      value: function render() {\n        var _this$props = this.props,\n            accessibilityLabel = _this$props.accessibilityLabel,\n            color = _this$props.color,\n            onPress = _this$props.onPress,\n            touchSoundDisabled = _this$props.touchSoundDisabled,\n            title = _this$props.title,\n            hasTVPreferredFocus = _this$props.hasTVPreferredFocus,\n            nextFocusDown = _this$props.nextFocusDown,\n            nextFocusForward = _this$props.nextFocusForward,\n            nextFocusLeft = _this$props.nextFocusLeft,\n            nextFocusRight = _this$props.nextFocusRight,\n            nextFocusUp = _this$props.nextFocusUp,\n            disabled = _this$props.disabled,\n            testID = _this$props.testID;\n        var buttonStyles = [styles.button];\n        var textStyles = [styles.text];\n\n        if (color) {\n          if (\"android\" === 'ios') {\n            textStyles.push({\n              color: color\n            });\n          } else {\n            buttonStyles.push({\n              backgroundColor: color\n            });\n          }\n        }\n\n        var accessibilityStates = [];\n\n        if (disabled) {\n          buttonStyles.push(styles.buttonDisabled);\n          textStyles.push(styles.textDisabled);\n          accessibilityStates.push('disabled');\n        }\n\n        invariant(typeof title === 'string', 'The title prop of a Button must be a string');\n        var formattedTitle = \"android\" === 'android' ? title.toUpperCase() : title;\n        var Touchable = \"android\" === 'android' ? TouchableNativeFeedback : TouchableOpacity;\n        return React.createElement(Touchable, {\n          accessibilityLabel: accessibilityLabel,\n          accessibilityRole: \"button\",\n          accessibilityStates: accessibilityStates,\n          hasTVPreferredFocus: hasTVPreferredFocus,\n          nextFocusDown: nextFocusDown,\n          nextFocusForward: nextFocusForward,\n          nextFocusLeft: nextFocusLeft,\n          nextFocusRight: nextFocusRight,\n          nextFocusUp: nextFocusUp,\n          testID: testID,\n          disabled: disabled,\n          onPress: onPress,\n          touchSoundDisabled: touchSoundDisabled,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          }\n        }, React.createElement(View, {\n          style: buttonStyles,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          }\n        }, React.createElement(Text, {\n          style: textStyles,\n          disabled: disabled,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          }\n        }, formattedTitle)));\n      }\n    }]);\n\n    return Button;\n  }(React.Component);\n\n  Button = _wrapComponent(\"Button\")(Button);\n  var styles = StyleSheet.create({\n    button: {\n      elevation: 4,\n      backgroundColor: '#2196F3',\n      borderRadius: 2\n    },\n    text: _objectSpread({\n      textAlign: 'center',\n      padding: 8\n    }, {\n      color: 'white',\n      fontWeight: '500'\n    }),\n    buttonDisabled: {\n      elevation: 0,\n      backgroundColor: '#dfdfdf'\n    },\n    textDisabled: {\n      color: '#a1a1a1'\n    }\n  });\n  module.exports = Button;\n});","map":[[2,0,11,0],[47,0,13,0],[47,6,13,6,"Platform"],[47,14,13,14],[47,17,13,17,"require"],[47,28,13,24],[47,72,13,0],[49,0,14,0],[49,6,14,6,"React"],[49,11,14,11],[49,14,14,14,"require"],[49,25,14,21],[49,53,14,0],[51,0,15,0],[51,6,15,6,"StyleSheet"],[51,16,15,16],[51,19,15,19,"require"],[51,30,15,26],[51,78,15,0],[53,0,16,0],[53,6,16,6,"Text"],[53,10,16,10],[53,13,16,13,"require"],[53,24,16,20],[53,60,16,0],[55,0,17,0],[55,6,17,6,"TouchableNativeFeedback"],[55,29,17,29],[55,32,17,32,"require"],[55,43,17,39],[55,102,17,0],[57,0,18,0],[57,6,18,6,"TouchableOpacity"],[57,22,18,22],[57,25,18,25,"require"],[57,36,18,32],[57,88,18,0],[59,0,19,0],[59,6,19,6,"View"],[59,10,19,10],[59,13,19,13,"require"],[59,24,19,20],[59,59,19,0],[61,0,21,0],[61,6,21,6,"invariant"],[61,15,21,15],[61,18,21,18,"require"],[61,29,21,25],[61,62,21,0],[63,6,130,6,"Button"],[63,12],[74,31,131,11],[75,0,131,11],[75,26,146,8],[75,31,146,13,"props"],[75,36,131,11],[76,0,131,11],[76,12,133,6,"accessibilityLabel"],[76,30,131,11],[76,45,133,6,"accessibilityLabel"],[76,63,131,11],[77,0,131,11],[77,12,134,6,"color"],[77,17,131,11],[77,32,134,6,"color"],[77,37,131,11],[78,0,131,11],[78,12,135,6,"onPress"],[78,19,131,11],[78,34,135,6,"onPress"],[78,41,131,11],[79,0,131,11],[79,12,136,6,"touchSoundDisabled"],[79,30,131,11],[79,45,136,6,"touchSoundDisabled"],[79,63,131,11],[80,0,131,11],[80,12,137,6,"title"],[80,17,131,11],[80,32,137,6,"title"],[80,37,131,11],[81,0,131,11],[81,12,138,6,"hasTVPreferredFocus"],[81,31,131,11],[81,46,138,6,"hasTVPreferredFocus"],[81,65,131,11],[82,0,131,11],[82,12,139,6,"nextFocusDown"],[82,25,131,11],[82,40,139,6,"nextFocusDown"],[82,53,131,11],[83,0,131,11],[83,12,140,6,"nextFocusForward"],[83,28,131,11],[83,43,140,6,"nextFocusForward"],[83,59,131,11],[84,0,131,11],[84,12,141,6,"nextFocusLeft"],[84,25,131,11],[84,40,141,6,"nextFocusLeft"],[84,53,131,11],[85,0,131,11],[85,12,142,6,"nextFocusRight"],[85,26,131,11],[85,41,142,6,"nextFocusRight"],[85,55,131,11],[86,0,131,11],[86,12,143,6,"nextFocusUp"],[86,23,131,11],[86,38,143,6,"nextFocusUp"],[86,49,131,11],[87,0,131,11],[87,12,144,6,"disabled"],[87,20,131,11],[87,35,144,6,"disabled"],[87,43,131,11],[88,0,131,11],[88,12,145,6,"testID"],[88,18,131,11],[88,33,145,6,"testID"],[88,39,131,11],[89,0,147,4],[89,12,147,10,"buttonStyles"],[89,24,147,22],[89,27,147,25],[89,28,147,26,"styles"],[89,34,147,32],[89,35,147,33,"button"],[89,41,147,25],[89,42,147,4],[90,0,148,4],[90,12,148,10,"textStyles"],[90,22,148,20],[90,25,148,23],[90,26,148,24,"styles"],[90,32,148,30],[90,33,148,31,"text"],[90,37,148,23],[90,38,148,4],[92,0,149,4],[92,12,149,8,"color"],[92,17,149,4],[92,19,149,15],[93,0,150,6],[93,14,150,10],[93,28,150,26],[93,33,150,6],[93,35,150,33],[94,0,151,8,"textStyles"],[94,12,151,8,"textStyles"],[94,22,151,18],[94,23,151,19,"push"],[94,27,151,8],[94,28,151,24],[95,0,151,25,"color"],[95,14,151,25,"color"],[95,19,151,30],[95,21,151,32,"color"],[96,0,151,24],[96,13,151,8],[97,0,152,7],[97,11,150,6],[97,17,152,13],[98,0,153,8,"buttonStyles"],[98,12,153,8,"buttonStyles"],[98,24,153,20],[98,25,153,21,"push"],[98,29,153,8],[98,30,153,26],[99,0,153,27,"backgroundColor"],[99,14,153,27,"backgroundColor"],[99,29,153,42],[99,31,153,44,"color"],[100,0,153,26],[100,13,153,8],[101,0,154,7],[102,0,155,5],[104,0,156,4],[104,12,156,10,"accessibilityStates"],[104,31,156,29],[104,34,156,32],[104,36,156,4],[106,0,157,4],[106,12,157,8,"disabled"],[106,20,157,4],[106,22,157,18],[107,0,158,6,"buttonStyles"],[107,10,158,6,"buttonStyles"],[107,22,158,18],[107,23,158,19,"push"],[107,27,158,6],[107,28,158,24,"styles"],[107,34,158,30],[107,35,158,31,"buttonDisabled"],[107,49,158,6],[108,0,159,6,"textStyles"],[108,10,159,6,"textStyles"],[108,20,159,16],[108,21,159,17,"push"],[108,25,159,6],[108,26,159,22,"styles"],[108,32,159,28],[108,33,159,29,"textDisabled"],[108,45,159,6],[109,0,160,6,"accessibilityStates"],[109,10,160,6,"accessibilityStates"],[109,29,160,25],[109,30,160,26,"push"],[109,34,160,6],[109,35,160,31],[109,45,160,6],[110,0,161,5],[112,0,162,4,"invariant"],[112,8,162,4,"invariant"],[112,17,162,13],[112,18,163,6],[112,25,163,13,"title"],[112,30,163,6],[112,35,163,23],[112,43,162,13],[112,45,164,6],[112,90,162,13],[112,91,162,4],[113,0,166,4],[113,12,166,10,"formattedTitle"],[113,26,166,24],[113,29,167,6],[113,43,167,22],[113,52,167,6],[113,55,167,34,"title"],[113,60,167,39],[113,61,167,40,"toUpperCase"],[113,72,167,34],[113,74,167,6],[113,77,167,56,"title"],[113,82,166,4],[114,0,168,4],[114,12,168,10,"Touchable"],[114,21,168,19],[114,24,169,6],[114,38,169,22],[114,47,169,6],[114,50,169,34,"TouchableNativeFeedback"],[114,73,169,6],[114,76,169,60,"TouchableOpacity"],[114,92,168,4],[115,0,170,4],[115,15,171,6],[115,35,171,7],[115,44,171,6],[116,0,172,8],[116,10,172,8],[116,28,172,26],[116,30,172,28,"accessibilityLabel"],[116,48,171,6],[117,0,173,8],[117,10,173,8],[117,27,173,25],[117,29,173,26],[117,37,171,6],[118,0,174,8],[118,10,174,8],[118,29,174,27],[118,31,174,29,"accessibilityStates"],[118,50,171,6],[119,0,175,8],[119,10,175,8],[119,29,175,27],[119,31,175,29,"hasTVPreferredFocus"],[119,50,171,6],[120,0,176,8],[120,10,176,8],[120,23,176,21],[120,25,176,23,"nextFocusDown"],[120,38,171,6],[121,0,177,8],[121,10,177,8],[121,26,177,24],[121,28,177,26,"nextFocusForward"],[121,44,171,6],[122,0,178,8],[122,10,178,8],[122,23,178,21],[122,25,178,23,"nextFocusLeft"],[122,38,171,6],[123,0,179,8],[123,10,179,8],[123,24,179,22],[123,26,179,24,"nextFocusRight"],[123,40,171,6],[124,0,180,8],[124,10,180,8],[124,21,180,19],[124,23,180,21,"nextFocusUp"],[124,34,171,6],[125,0,181,8],[125,10,181,8],[125,16,181,14],[125,18,181,16,"testID"],[125,24,171,6],[126,0,182,8],[126,10,182,8],[126,18,182,16],[126,20,182,18,"disabled"],[126,28,171,6],[127,0,183,8],[127,10,183,8],[127,17,183,15],[127,19,183,17,"onPress"],[127,26,171,6],[128,0,184,8],[128,10,184,8],[128,28,184,26],[128,30,184,28,"touchSoundDisabled"],[128,48,171,6],[129,0,171,6],[130,0,171,6],[131,0,171,6],[132,0,171,6],[133,0,171,6],[133,11,185,8],[133,31,185,9],[133,35,185,8],[134,0,185,14],[134,10,185,14],[134,15,185,19],[134,17,185,21,"buttonStyles"],[134,29,185,8],[135,0,185,8],[136,0,185,8],[137,0,185,8],[138,0,185,8],[139,0,185,8],[139,11,186,10],[139,31,186,11],[139,35,186,10],[140,0,186,16],[140,10,186,16],[140,15,186,21],[140,17,186,23,"textStyles"],[140,27,186,10],[141,0,186,35],[141,10,186,35],[141,18,186,43],[141,20,186,45,"disabled"],[141,28,186,10],[142,0,186,10],[143,0,186,10],[144,0,186,10],[145,0,186,10],[146,0,186,10],[146,11,187,13,"formattedTitle"],[146,25,186,10],[146,26,185,8],[146,27,171,6],[146,28,170,4],[147,0,192,3],[151,4,130,21,"React"],[151,9,130,26],[151,10,130,27,"Component"],[151,19],[154,0,195,0],[154,6,195,6,"styles"],[154,12,195,12],[154,15,195,15,"StyleSheet"],[154,25,195,25],[154,26,195,26,"create"],[154,32,195,15],[154,33,195,33],[155,0,196,2,"button"],[155,4,196,2,"button"],[155,10,196,8],[155,12,198,13],[156,0,199,6,"elevation"],[156,6,199,6,"elevation"],[156,15,199,15],[156,17,199,17],[156,18,198,13],[157,0,201,6,"backgroundColor"],[157,6,201,6,"backgroundColor"],[157,21,201,21],[157,23,201,23],[157,32,198,13],[158,0,202,6,"borderRadius"],[158,6,202,6,"borderRadius"],[158,18,202,18],[158,20,202,20],[159,0,198,13],[159,5,195,33],[160,0,205,2,"text"],[160,4,205,2,"text"],[160,8,205,6],[161,0,206,4,"textAlign"],[161,6,206,4,"textAlign"],[161,15,206,13],[161,17,206,15],[161,25,205,6],[162,0,207,4,"padding"],[162,6,207,4,"padding"],[162,13,207,11],[162,15,207,13],[163,0,205,6],[163,7,214,15],[164,0,215,8,"color"],[164,6,215,8,"color"],[164,11,215,13],[164,13,215,15],[164,20,214,15],[165,0,216,8,"fontWeight"],[165,6,216,8,"fontWeight"],[165,16,216,18],[165,18,216,20],[166,0,214,15],[166,5,205,6],[166,6,195,33],[167,0,220,2,"buttonDisabled"],[167,4,220,2,"buttonDisabled"],[167,18,220,16],[167,20,222,13],[168,0,223,6,"elevation"],[168,6,223,6,"elevation"],[168,15,223,15],[168,17,223,17],[168,18,222,13],[169,0,224,6,"backgroundColor"],[169,6,224,6,"backgroundColor"],[169,21,224,21],[169,23,224,23],[170,0,222,13],[170,5,195,33],[171,0,227,2,"textDisabled"],[171,4,227,2,"textDisabled"],[171,16,227,14],[171,18,231,13],[172,0,232,6,"color"],[172,6,232,6,"color"],[172,11,232,11],[172,13,232,13],[173,0,231,13],[174,0,195,33],[174,3,195,15],[174,4,195,0],[175,0,237,0,"module"],[175,2,237,0,"module"],[175,8,237,6],[175,9,237,7,"exports"],[175,16,237,0],[175,19,237,17,"Button"],[175,25,237,0]]},"type":"js/module"}]}