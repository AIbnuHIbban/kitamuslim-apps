{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"fbjs/lib/areEqual","data":{"isAsync":false}},{"name":"./RNGestureHandlerModule","data":{"isAsync":false}},{"name":"./State","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createHandler;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/inherits\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"./../react-transform-hmr/lib/index.js\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[9], \"react-native\");\n\n  var _areEqual = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"fbjs/lib/areEqual\"));\n\n  var _RNGestureHandlerModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"./RNGestureHandlerModule\"));\n\n  var _State = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"./State\"));\n\n  var _stateToPropMappings;\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var _components = {\n    Handler: {\n      displayName: \"Handler\",\n      isInFunction: true\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"node_modules/react-native-gesture-handler/createHandler.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  function findNodeHandle(node) {\n    if (_reactNative.Platform.OS === 'web') return node;\n    return (0, _reactNative.findNodeHandle)(node);\n  }\n\n  var _NativeModules$UIMana = _reactNative.NativeModules.UIManager,\n      UIManager = _NativeModules$UIMana === void 0 ? {} : _NativeModules$UIMana;\n  var customGHEventsConfig = {\n    onGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    onGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  };\n  UIManager.genericDirectEventTypes = _objectSpread({}, UIManager.genericDirectEventTypes, {}, customGHEventsConfig);\n  var _UIManager$setJSRespo = UIManager.setJSResponder,\n      oldSetJSResponder = _UIManager$setJSRespo === void 0 ? function () {} : _UIManager$setJSRespo,\n      _UIManager$clearJSRes = UIManager.clearJSResponder,\n      oldClearJSResponder = _UIManager$clearJSRes === void 0 ? function () {} : _UIManager$clearJSRes,\n      _UIManager$getConstan = UIManager.getConstants,\n      oldGetConstants = _UIManager$getConstan === void 0 ? function () {\n    return {};\n  } : _UIManager$getConstan;\n\n  UIManager.setJSResponder = function (tag, blockNativeResponder) {\n    _RNGestureHandlerModule.default.handleSetJSResponder(tag, blockNativeResponder);\n\n    oldSetJSResponder(tag, blockNativeResponder);\n  };\n\n  UIManager.clearJSResponder = function () {\n    _RNGestureHandlerModule.default.handleClearJSResponder();\n\n    oldClearJSResponder();\n  };\n\n  UIManager.getConstants = function () {\n    var constants = oldGetConstants();\n    return _objectSpread({}, constants, {\n      genericDirectEventTypes: _objectSpread({}, constants.genericDirectEventTypes, {}, customGHEventsConfig)\n    });\n  };\n\n  var handlerTag = 1;\n  var handlerIDToTag = {};\n\n  function isConfigParam(param, name) {\n    return param !== undefined && (param !== Object(param) || !('__isNative' in param)) && name !== 'onHandlerStateChange' && name !== 'onGestureEvent';\n  }\n\n  function filterConfig(props, validProps) {\n    var defaults = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var res = _objectSpread({}, defaults);\n\n    Object.keys(validProps).forEach(function (key) {\n      var value = props[key];\n\n      if (isConfigParam(value, key)) {\n        var _value = props[key];\n\n        if (key === 'simultaneousHandlers' || key === 'waitFor') {\n          _value = transformIntoHandlerTags(props[key]);\n        } else if (key === 'hitSlop') {\n          if (typeof _value !== 'object') {\n            _value = {\n              top: _value,\n              left: _value,\n              bottom: _value,\n              right: _value\n            };\n          }\n        }\n\n        res[key] = _value;\n      }\n    });\n    return res;\n  }\n\n  function transformIntoHandlerTags(handlerIDs) {\n    if (!Array.isArray(handlerIDs)) {\n      handlerIDs = [handlerIDs];\n    }\n\n    if (_reactNative.Platform.OS === 'web') {\n      return handlerIDs.map(function (_ref) {\n        var current = _ref.current;\n        return current;\n      }).filter(function (handle) {\n        return handle;\n      });\n    }\n\n    return handlerIDs.map(function (handlerID) {\n      return handlerIDToTag[handlerID] || handlerID.current && handlerID.current._handlerTag || -1;\n    }).filter(function (handlerTag) {\n      return handlerTag > 0;\n    });\n  }\n\n  function hasUnresolvedRefs(props) {\n    var extract = function extract(refs) {\n      if (!Array.isArray(refs)) {\n        return refs && refs.current === null;\n      }\n\n      return refs.some(function (r) {\n        return r && r.current === null;\n      });\n    };\n\n    return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n  }\n\n  var stateToPropMappings = (_stateToPropMappings = {}, (0, _defineProperty2.default)(_stateToPropMappings, _State.default.BEGAN, 'onBegan'), (0, _defineProperty2.default)(_stateToPropMappings, _State.default.FAILED, 'onFailed'), (0, _defineProperty2.default)(_stateToPropMappings, _State.default.CANCELLED, 'onCancelled'), (0, _defineProperty2.default)(_stateToPropMappings, _State.default.ACTIVE, 'onActivated'), (0, _defineProperty2.default)(_stateToPropMappings, _State.default.END, 'onEnded'), _stateToPropMappings);\n\n  function createHandler(handlerName) {\n    var propTypes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var transformProps = arguments.length > 3 ? arguments[3] : undefined;\n    var customNativeProps = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n    var Handler = function (_React$Component) {\n      (0, _inherits2.default)(Handler, _React$Component);\n\n      function Handler(props) {\n        var _this;\n\n        (0, _classCallCheck2.default)(this, Handler);\n        _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Handler).call(this, props));\n\n        _this._onGestureHandlerEvent = function (event) {\n          if (event.nativeEvent.handlerTag === _this._handlerTag) {\n            _this.props.onGestureEvent && _this.props.onGestureEvent(event);\n          } else {\n            _this.props.onGestureHandlerEvent && _this.props.onGestureHandlerEvent(event);\n          }\n        };\n\n        _this._onGestureHandlerStateChange = function (event) {\n          if (event.nativeEvent.handlerTag === _this._handlerTag) {\n            _this.props.onHandlerStateChange && _this.props.onHandlerStateChange(event);\n            var stateEventName = stateToPropMappings[event.nativeEvent.state];\n\n            if (typeof _this.props[stateEventName] === 'function') {\n              _this.props[stateEventName](event);\n            }\n          } else {\n            _this.props.onGestureHandlerStateChange && _this.props.onGestureHandlerStateChange(event);\n          }\n        };\n\n        _this._refHandler = function (node) {\n          _this._viewNode = node;\n\n          var child = _react.default.Children.only(_this.props.children);\n\n          var ref = child.ref;\n\n          if (ref !== null) {\n            if (typeof ref === 'function') {\n              ref(node);\n            } else {\n              ref.current = node;\n            }\n          }\n        };\n\n        _this._createGestureHandler = function (newConfig) {\n          _this._config = newConfig;\n\n          _RNGestureHandlerModule.default.createGestureHandler(handlerName, _this._handlerTag, newConfig);\n        };\n\n        _this._attachGestureHandler = function (newViewTag) {\n          _this._viewTag = newViewTag;\n\n          _RNGestureHandlerModule.default.attachGestureHandler(_this._handlerTag, newViewTag);\n        };\n\n        _this._updateGestureHandler = function (newConfig) {\n          _this._config = newConfig;\n\n          _RNGestureHandlerModule.default.updateGestureHandler(_this._handlerTag, newConfig);\n        };\n\n        _this._handlerTag = handlerTag++;\n        _this._config = {};\n\n        if (props.id) {\n          if (handlerIDToTag[props.id] !== undefined) {\n            throw new Error(\"Handler with ID \\\"\" + props.id + \"\\\" already registered\");\n          }\n\n          handlerIDToTag[props.id] = _this._handlerTag;\n        }\n\n        return _this;\n      }\n\n      (0, _createClass2.default)(Handler, [{\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          _RNGestureHandlerModule.default.dropGestureHandler(this._handlerTag);\n\n          if (this._updateEnqueued) {\n            clearImmediate(this._updateEnqueued);\n          }\n\n          if (this.props.id) {\n            delete handlerIDToTag[this.props.id];\n          }\n        }\n      }, {\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this2 = this;\n\n          if (hasUnresolvedRefs(this.props)) {\n            this._updateEnqueued = setImmediate(function () {\n              _this2._updateEnqueued = null;\n\n              _this2._update();\n            });\n          }\n\n          this._createGestureHandler(filterConfig(transformProps ? transformProps(this.props) : this.props, _objectSpread({}, this.constructor.propTypes, {}, customNativeProps), config));\n\n          this._attachGestureHandler(findNodeHandle(this._viewNode));\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate() {\n          var viewTag = findNodeHandle(this._viewNode);\n\n          if (this._viewTag !== viewTag) {\n            this._attachGestureHandler(viewTag);\n          }\n\n          this._update();\n        }\n      }, {\n        key: \"_update\",\n        value: function _update() {\n          var newConfig = filterConfig(transformProps ? transformProps(this.props) : this.props, _objectSpread({}, this.constructor.propTypes, {}, customNativeProps), config);\n\n          if (!(0, _areEqual.default)(this._config, newConfig)) {\n            this._updateGestureHandler(newConfig);\n          }\n        }\n      }, {\n        key: \"setNativeProps\",\n        value: function setNativeProps(updates) {\n          var mergedProps = _objectSpread({}, this.props, {}, updates);\n\n          var newConfig = filterConfig(transformProps ? transformProps(mergedProps) : mergedProps, _objectSpread({}, this.constructor.propTypes, {}, customNativeProps), config);\n\n          this._updateGestureHandler(newConfig);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var gestureEventHandler = this._onGestureHandlerEvent;\n          var _this$props = this.props,\n              onGestureEvent = _this$props.onGestureEvent,\n              onGestureHandlerEvent = _this$props.onGestureHandlerEvent;\n\n          if (onGestureEvent && typeof onGestureEvent !== 'function') {\n            if (onGestureHandlerEvent) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n\n            gestureEventHandler = this.props.onGestureEvent;\n          } else {\n            if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n\n          var gestureStateEventHandler = this._onGestureHandlerStateChange;\n          var _this$props2 = this.props,\n              onHandlerStateChange = _this$props2.onHandlerStateChange,\n              onGestureHandlerStateChange = _this$props2.onGestureHandlerStateChange;\n\n          if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n            if (onGestureHandlerStateChange) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n\n            gestureStateEventHandler = this.props.onHandlerStateChange;\n          } else {\n            if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n\n          var child = _react.default.Children.only(this.props.children);\n\n          var grandChildren = child.props.children;\n\n          if (_reactNative.Touchable.TOUCH_TARGET_DEBUG && child.type && (child.type === 'RNGestureHandlerButton' || child.type.name === 'View' || child.type.displayName === 'View')) {\n            grandChildren = _react.default.Children.toArray(grandChildren);\n            grandChildren.push(_reactNative.Touchable.renderDebugView({\n              color: 'mediumspringgreen',\n              hitSlop: child.props.hitSlop\n            }));\n          }\n\n          return _react.default.cloneElement(child, {\n            ref: this._refHandler,\n            collapsable: false,\n            onGestureHandlerEvent: gestureEventHandler,\n            onGestureHandlerStateChange: gestureStateEventHandler\n          }, grandChildren);\n        }\n      }]);\n      return Handler;\n    }(_react.default.Component);\n\n    Handler.displayName = handlerName;\n    Handler.propTypes = propTypes;\n    Handler = _wrapComponent(\"Handler\")(Handler);\n    return Handler;\n  }\n});","map":[[21,0,1,0],[25,0,2,0],[27,0,8,0],[29,0,9,0],[31,0,10,0],[59,0,12,0],[59,11,12,9,"findNodeHandle"],[59,25,12,0],[59,26,12,24,"node"],[59,30,12,0],[59,32,12,30],[60,0,13,2],[60,8,13,6,"Platform"],[60,30,13,15,"OS"],[60,32,13,6],[60,37,13,22],[60,42,13,2],[60,44,13,29],[60,51,13,36,"node"],[60,55,13,29],[61,0,14,2],[61,11,14,9],[61,44,14,26,"node"],[61,48,14,9],[61,49,14,2],[62,0,15,1],[64,30,17,27,"NativeModules"],[64,56],[64,57,17,8,"UIManager"],[64,66],[65,6,17,8,"UIManager"],[65,15],[65,53,17,20],[65,55],[66,0,19,0],[66,6,19,6,"customGHEventsConfig"],[66,26,19,26],[66,29,19,29],[67,0,20,2,"onGestureHandlerEvent"],[67,4,20,2,"onGestureHandlerEvent"],[67,25,20,23],[67,27,20,25],[68,0,20,27,"registrationName"],[68,6,20,27,"registrationName"],[68,22,20,43],[68,24,20,45],[69,0,20,25],[69,5,19,29],[70,0,21,2,"onGestureHandlerStateChange"],[70,4,21,2,"onGestureHandlerStateChange"],[70,31,21,29],[70,33,21,31],[71,0,22,4,"registrationName"],[71,6,22,4,"registrationName"],[71,22,22,20],[71,24,22,22],[72,0,21,31],[73,0,19,29],[73,3,19,0],[74,0,30,0,"UIManager"],[74,2,30,0,"UIManager"],[74,11,30,9],[74,12,30,10,"genericDirectEventTypes"],[74,35,30,0],[74,56,31,5,"UIManager"],[74,65,31,14],[74,66,31,15,"genericDirectEventTypes"],[74,89,30,0],[74,95,32,5,"customGHEventsConfig"],[74,115,30,0],[75,30,40,4,"UIManager"],[75,39],[75,40,37,2,"setJSResponder"],[75,54],[76,6,37,18,"oldSetJSResponder"],[76,23],[76,61,37,38],[76,73,37,44],[76,74,37,46],[76,75],[77,30,40,4,"UIManager"],[77,39],[77,40,38,2,"clearJSResponder"],[77,56],[78,6,38,20,"oldClearJSResponder"],[78,25],[78,63,38,42],[78,75,38,48],[78,76,38,50],[78,77],[79,30,40,4,"UIManager"],[79,39],[79,40,39,2,"getConstants"],[79,52],[80,6,39,16,"oldGetConstants"],[80,21],[80,59,39,34],[81,0,39,34],[81,11,39,41],[81,13,39,34],[82,0,39,34],[82,3],[84,0,41,0,"UIManager"],[84,2,41,0,"UIManager"],[84,11,41,9],[84,12,41,10,"setJSResponder"],[84,26,41,0],[84,29,41,27],[84,39,41,28,"tag"],[84,42,41,27],[84,44,41,33,"blockNativeResponder"],[84,64,41,27],[84,66,41,58],[85,0,42,2,"RNGestureHandlerModule"],[85,36,42,25,"handleSetJSResponder"],[85,56,42,2],[85,57,42,46,"tag"],[85,60,42,2],[85,62,42,51,"blockNativeResponder"],[85,82,42,2],[87,0,43,2,"oldSetJSResponder"],[87,4,43,2,"oldSetJSResponder"],[87,21,43,19],[87,22,43,20,"tag"],[87,25,43,19],[87,27,43,25,"blockNativeResponder"],[87,47,43,19],[87,48,43,2],[88,0,44,1],[88,3,41,0],[90,0,45,0,"UIManager"],[90,2,45,0,"UIManager"],[90,11,45,9],[90,12,45,10,"clearJSResponder"],[90,28,45,0],[90,31,45,29],[90,43,45,35],[91,0,46,2,"RNGestureHandlerModule"],[91,36,46,25,"handleClearJSResponder"],[91,58,46,2],[93,0,47,2,"oldClearJSResponder"],[93,4,47,2,"oldClearJSResponder"],[93,23,47,21],[94,0,48,1],[94,3,45,0],[96,0,51,0,"UIManager"],[96,2,51,0,"UIManager"],[96,11,51,9],[96,12,51,10,"getConstants"],[96,24,51,0],[96,27,51,25],[96,39,51,31],[97,0,52,2],[97,8,52,8,"constants"],[97,17,52,17],[97,20,52,20,"oldGetConstants"],[97,35,52,35],[97,37,52,2],[98,0,53,2],[98,29,54,7,"constants"],[98,38,53,2],[99,0,55,4,"genericDirectEventTypes"],[99,6,55,4,"genericDirectEventTypes"],[99,29,55,27],[99,49,56,9,"constants"],[99,58,56,18],[99,59,56,19,"genericDirectEventTypes"],[99,82,55,27],[99,88,57,9,"customGHEventsConfig"],[99,108,55,27],[100,0,53,2],[101,0,60,1],[101,3,51,0],[103,0,62,0],[103,6,62,4,"handlerTag"],[103,16,62,14],[103,19,62,17],[103,20,62,0],[104,0,63,0],[104,6,63,6,"handlerIDToTag"],[104,20,63,20],[104,23,63,23],[104,25,63,0],[106,0,65,0],[106,11,65,9,"isConfigParam"],[106,24,65,0],[106,25,65,23,"param"],[106,30,65,0],[106,32,65,30,"name"],[106,36,65,0],[106,38,65,36],[107,0,68,2],[107,11,69,4,"param"],[107,16,69,9],[107,21,69,14,"undefined"],[107,30,69,4],[107,35,70,5,"param"],[107,40,70,10],[107,45,70,15,"Object"],[107,51,70,21],[107,52,70,22,"param"],[107,57,70,21],[107,58,70,5],[107,62,70,32],[107,64,70,34],[107,80,70,50,"param"],[107,85,70,32],[107,86,69,4],[107,91,71,4,"name"],[107,95,71,8],[107,100,71,13],[107,122,69,4],[107,126,72,4,"name"],[107,130,72,8],[107,135,72,13],[107,151,68,2],[108,0,74,1],[110,0,76,0],[110,11,76,9,"filterConfig"],[110,23,76,0],[110,24,76,22,"props"],[110,29,76,0],[110,31,76,29,"validProps"],[110,41,76,0],[110,43,76,56],[111,0,76,56],[111,8,76,41,"defaults"],[111,16,76,56],[111,87,76,52],[111,89,76,56],[113,0,77,2],[113,8,77,8,"res"],[113,11,77,11],[113,32,77,19,"defaults"],[113,40,77,11],[113,41,77,2],[115,0,78,2,"Object"],[115,4,78,2,"Object"],[115,10,78,8],[115,11,78,9,"keys"],[115,15,78,2],[115,16,78,14,"validProps"],[115,26,78,2],[115,28,78,26,"forEach"],[115,35,78,2],[115,36,78,34],[115,46,78,34,"key"],[115,49,78,37],[115,51,78,41],[116,0,79,4],[116,10,79,10,"value"],[116,15,79,15],[116,18,79,18,"props"],[116,23,79,23],[116,24,79,24,"key"],[116,27,79,23],[116,28,79,4],[118,0,80,4],[118,10,80,8,"isConfigParam"],[118,23,80,21],[118,24,80,22,"value"],[118,29,80,21],[118,31,80,29,"key"],[118,34,80,21],[118,35,80,4],[118,37,80,35],[119,0,81,6],[119,12,81,10,"value"],[119,18,81,15],[119,21,81,18,"props"],[119,26,81,23],[119,27,81,24,"key"],[119,30,81,23],[119,31,81,6],[121,0,82,6],[121,12,82,10,"key"],[121,15,82,13],[121,20,82,18],[121,42,82,10],[121,46,82,44,"key"],[121,49,82,47],[121,54,82,52],[121,63,82,6],[121,65,82,63],[122,0,83,8,"value"],[122,10,83,8,"value"],[122,16,83,13],[122,19,83,16,"transformIntoHandlerTags"],[122,43,83,40],[122,44,83,41,"props"],[122,49,83,46],[122,50,83,47,"key"],[122,53,83,46],[122,54,83,40],[122,55,83,8],[123,0,84,7],[123,9,82,6],[123,15,84,13],[123,19,84,17,"key"],[123,22,84,20],[123,27,84,25],[123,36,84,13],[123,38,84,36],[124,0,85,8],[124,14,85,12],[124,21,85,19,"value"],[124,27,85,12],[124,32,85,29],[124,40,85,8],[124,42,85,39],[125,0,86,10,"value"],[125,12,86,10,"value"],[125,18,86,15],[125,21,86,18],[126,0,86,20,"top"],[126,14,86,20,"top"],[126,17,86,23],[126,19,86,25,"value"],[126,25,86,18],[127,0,86,32,"left"],[127,14,86,32,"left"],[127,18,86,36],[127,20,86,38,"value"],[127,26,86,18],[128,0,86,45,"bottom"],[128,14,86,45,"bottom"],[128,20,86,51],[128,22,86,53,"value"],[128,28,86,18],[129,0,86,60,"right"],[129,14,86,60,"right"],[129,19,86,65],[129,21,86,67,"value"],[130,0,86,18],[130,13,86,10],[131,0,87,9],[132,0,88,7],[134,0,89,6,"res"],[134,8,89,6,"res"],[134,11,89,9],[134,12,89,10,"key"],[134,15,89,9],[134,16,89,6],[134,19,89,17,"value"],[134,25,89,6],[135,0,90,5],[136,0,91,3],[136,5,78,2],[137,0,92,2],[137,11,92,9,"res"],[137,14,92,2],[138,0,93,1],[140,0,95,0],[140,11,95,9,"transformIntoHandlerTags"],[140,35,95,0],[140,36,95,34,"handlerIDs"],[140,46,95,0],[140,48,95,46],[141,0,96,2],[141,8,96,6],[141,9,96,7,"Array"],[141,14,96,12],[141,15,96,13,"isArray"],[141,22,96,7],[141,23,96,21,"handlerIDs"],[141,33,96,7],[141,34,96,2],[141,36,96,34],[142,0,97,4,"handlerIDs"],[142,6,97,4,"handlerIDs"],[142,16,97,14],[142,19,97,17],[142,20,97,18,"handlerIDs"],[142,30,97,17],[142,31,97,4],[143,0,98,3],[145,0,100,2],[145,8,100,6,"Platform"],[145,30,100,15,"OS"],[145,32,100,6],[145,37,100,22],[145,42,100,2],[145,44,100,29],[146,0,101,4],[146,13,101,11,"handlerIDs"],[146,23,101,21],[146,24,101,22,"map"],[146,27,101,11],[146,28,101,26],[147,0,101,26],[147,12,101,29,"current"],[147,19,101,26],[147,27,101,29,"current"],[147,34,101,26],[148,0,101,26],[148,15,101,43,"current"],[148,22,101,26],[149,0,101,26],[149,7,101,11],[149,9,101,52,"filter"],[149,15,101,11],[149,16,101,59],[149,26,101,59,"handle"],[149,32,101,65],[150,0,101,65],[150,15,101,69,"handle"],[150,21,101,65],[151,0,101,65],[151,7,101,11],[151,8,101,4],[152,0,102,3],[154,0,104,2],[154,11,104,9,"handlerIDs"],[154,21,104,19],[154,22,105,5,"map"],[154,25,104,9],[154,26,106,6],[154,36,106,6,"handlerID"],[154,45,106,15],[155,0,106,15],[155,13,107,8,"handlerIDToTag"],[155,27,107,22],[155,28,107,23,"handlerID"],[155,37,107,22],[155,38,107,8],[155,42,108,9,"handlerID"],[155,51,108,18],[155,52,108,19,"current"],[155,59,108,9],[155,63,108,30,"handlerID"],[155,72,108,39],[155,73,108,40,"current"],[155,80,108,30],[155,81,108,48,"_handlerTag"],[155,92,107,8],[155,96,109,8],[155,97,109,9],[155,98,106,15],[156,0,106,15],[156,5,104,9],[156,7,111,5,"filter"],[156,13,104,9],[156,14,111,12],[156,24,111,12,"handlerTag"],[156,34,111,22],[157,0,111,22],[157,13,111,26,"handlerTag"],[157,23,111,36],[157,26,111,39],[157,27,111,22],[158,0,111,22],[158,5,104,9],[158,6,104,2],[159,0,112,1],[161,0,114,0],[161,11,114,9,"hasUnresolvedRefs"],[161,28,114,0],[161,29,114,27,"props"],[161,34,114,0],[161,36,114,34],[162,0,115,2],[162,8,115,8,"extract"],[162,15,115,15],[162,18,115,18],[162,27,115,8,"extract"],[162,34,115,18],[162,35,115,18,"refs"],[162,39,115,22],[162,41,115,26],[163,0,116,4],[163,10,116,8],[163,11,116,9,"Array"],[163,16,116,14],[163,17,116,15,"isArray"],[163,24,116,9],[163,25,116,23,"refs"],[163,29,116,9],[163,30,116,4],[163,32,116,30],[164,0,117,6],[164,15,117,13,"refs"],[164,19,117,17],[164,23,117,21,"refs"],[164,27,117,25],[164,28,117,26,"current"],[164,35,117,21],[164,40,117,38],[164,44,117,6],[165,0,118,5],[167,0,119,4],[167,13,119,11,"refs"],[167,17,119,15],[167,18,119,16,"some"],[167,22,119,11],[167,23,119,21],[167,33,119,21,"r"],[167,34,119,22],[168,0,119,22],[168,15,119,26,"r"],[168,16,119,27],[168,20,119,31,"r"],[168,21,119,32],[168,22,119,33,"current"],[168,29,119,31],[168,34,119,45],[168,38,119,22],[169,0,119,22],[169,7,119,11],[169,8,119,4],[170,0,120,3],[170,5,115,2],[172,0,121,2],[172,11,121,9,"extract"],[172,18,121,16],[172,19,121,17,"props"],[172,24,121,22],[172,25,121,23],[172,47,121,22],[172,48,121,16],[172,49,121,9],[172,53,121,51,"extract"],[172,60,121,58],[172,61,121,59,"props"],[172,66,121,64],[172,67,121,65],[172,76,121,64],[172,77,121,58],[172,78,121,2],[173,0,122,1],[175,0,124,0],[175,6,124,6,"stateToPropMappings"],[175,25,124,25],[175,108,125,3,"State"],[175,123,125,9,"BEGAN"],[175,128,124,25],[175,130,125,17],[175,139,124,25],[175,194,126,3,"State"],[175,209,126,9,"FAILED"],[175,215,124,25],[175,217,126,18],[175,227,124,25],[175,282,127,3,"State"],[175,297,127,9,"CANCELLED"],[175,306,124,25],[175,308,127,21],[175,321,124,25],[175,376,128,3,"State"],[175,391,128,9,"ACTIVE"],[175,397,124,25],[175,399,128,18],[175,412,124,25],[175,467,129,3,"State"],[175,482,129,9,"END"],[175,485,124,25],[175,487,129,15],[175,496,124,25],[175,520,124,0],[177,0,132,15],[177,11,132,24,"createHandler"],[177,24,132,15],[177,25,133,2,"handlerName"],[177,36,132,15],[177,38,138,2],[178,0,138,2],[178,8,134,2,"propTypes"],[178,17,138,2],[178,88,134,14],[178,90,138,2],[179,0,138,2],[179,8,135,2,"config"],[179,14,138,2],[179,85,135,11],[179,87,138,2],[180,0,138,2],[180,8,136,2,"transformProps"],[180,22,138,2],[181,0,138,2],[181,8,137,2,"customNativeProps"],[181,25,138,2],[181,96,137,22],[181,98,138,2],[183,0,138,2],[183,8,139,8,"Handler"],[183,15,138,2],[184,0,138,2],[186,0,144,4],[186,23,144,16,"props"],[186,28,144,4],[186,30,144,23],[187,0,144,23],[189,0,144,23],[190,0,145,6],[190,113,145,12,"props"],[190,118,145,6],[192,0,144,23],[192,14,156,4,"_onGestureHandlerEvent"],[192,36,144,23],[192,39,156,29],[192,49,156,29,"event"],[192,54,156,34],[192,56,156,38],[193,0,157,6],[193,14,157,10,"event"],[193,19,157,15],[193,20,157,16,"nativeEvent"],[193,31,157,10],[193,32,157,28,"handlerTag"],[193,42,157,10],[193,47,157,43],[193,53,157,48,"_handlerTag"],[193,64,157,6],[193,66,157,61],[194,0,158,8],[194,18,158,13,"props"],[194,23,158,8],[194,24,158,19,"onGestureEvent"],[194,38,158,8],[194,42,158,37],[194,48,158,42,"props"],[194,53,158,37],[194,54,158,48,"onGestureEvent"],[194,68,158,37],[194,69,158,63,"event"],[194,74,158,37],[194,75,158,8],[195,0,159,7],[195,11,157,6],[195,17,159,13],[196,0,160,8],[196,18,160,13,"props"],[196,23,160,8],[196,24,160,19,"onGestureHandlerEvent"],[196,45,160,8],[196,49,161,10],[196,55,161,15,"props"],[196,60,161,10],[196,61,161,21,"onGestureHandlerEvent"],[196,82,161,10],[196,83,161,43,"event"],[196,88,161,10],[196,89,160,8],[197,0,162,7],[198,0,163,5],[198,9,144,23],[200,0,144,23],[200,14,165,4,"_onGestureHandlerStateChange"],[200,42,144,23],[200,45,165,35],[200,55,165,35,"event"],[200,60,165,40],[200,62,165,44],[201,0,166,6],[201,14,166,10,"event"],[201,19,166,15],[201,20,166,16,"nativeEvent"],[201,31,166,10],[201,32,166,28,"handlerTag"],[201,42,166,10],[201,47,166,43],[201,53,166,48,"_handlerTag"],[201,64,166,6],[201,66,166,61],[202,0,167,8],[202,18,167,13,"props"],[202,23,167,8],[202,24,167,19,"onHandlerStateChange"],[202,44,167,8],[202,48,168,10],[202,54,168,15,"props"],[202,59,168,10],[202,60,168,21,"onHandlerStateChange"],[202,80,168,10],[202,81,168,42,"event"],[202,86,168,10],[202,87,167,8],[203,0,170,8],[203,16,170,14,"stateEventName"],[203,30,170,28],[203,33,170,31,"stateToPropMappings"],[203,52,170,50],[203,53,170,51,"event"],[203,58,170,56],[203,59,170,57,"nativeEvent"],[203,70,170,51],[203,71,170,69,"state"],[203,76,170,50],[203,77,170,8],[205,0,171,8],[205,16,171,12],[205,23,171,19],[205,29,171,24,"props"],[205,34,171,19],[205,35,171,30,"stateEventName"],[205,49,171,19],[205,50,171,12],[205,55,171,50],[205,65,171,8],[205,67,171,62],[206,0,172,10],[206,20,172,15,"props"],[206,25,172,10],[206,26,172,21,"stateEventName"],[206,40,172,10],[206,42,172,37,"event"],[206,47,172,10],[207,0,173,9],[208,0,174,7],[208,11,166,6],[208,17,174,13],[209,0,175,8],[209,18,175,13,"props"],[209,23,175,8],[209,24,175,19,"onGestureHandlerStateChange"],[209,51,175,8],[209,55,176,10],[209,61,176,15,"props"],[209,66,176,10],[209,67,176,21,"onGestureHandlerStateChange"],[209,94,176,10],[209,95,176,49,"event"],[209,100,176,10],[209,101,175,8],[210,0,177,7],[211,0,178,5],[211,9,144,23],[213,0,144,23],[213,14,180,4,"_refHandler"],[213,25,144,23],[213,28,180,18],[213,38,180,18,"node"],[213,42,180,22],[213,44,180,26],[214,0,181,6],[214,16,181,11,"_viewNode"],[214,25,181,6],[214,28,181,23,"node"],[214,32,181,6],[216,0,183,6],[216,14,183,12,"child"],[216,19,183,17],[216,22,183,20,"React"],[216,37,183,26,"Children"],[216,45,183,20],[216,46,183,35,"only"],[216,50,183,20],[216,51,183,40],[216,57,183,45,"props"],[216,62,183,40],[216,63,183,51,"children"],[216,71,183,20],[216,72,183,6],[218,0,180,26],[218,14,184,14,"ref"],[218,17,180,26],[218,20,184,22,"child"],[218,25,180,26],[218,26,184,14,"ref"],[218,29,180,26],[220,0,185,6],[220,14,185,10,"ref"],[220,17,185,13],[220,22,185,18],[220,26,185,6],[220,28,185,24],[221,0,186,8],[221,16,186,12],[221,23,186,19,"ref"],[221,26,186,12],[221,31,186,27],[221,41,186,8],[221,43,186,39],[222,0,187,10,"ref"],[222,14,187,10,"ref"],[222,17,187,13],[222,18,187,14,"node"],[222,22,187,13],[222,23,187,10],[223,0,188,9],[223,13,186,8],[223,19,188,15],[224,0,189,10,"ref"],[224,14,189,10,"ref"],[224,17,189,13],[224,18,189,14,"current"],[224,25,189,10],[224,28,189,24,"node"],[224,32,189,10],[225,0,190,9],[226,0,191,7],[227,0,192,5],[227,9,144,23],[229,0,144,23],[229,14,194,4,"_createGestureHandler"],[229,35,144,23],[229,38,194,28],[229,48,194,28,"newConfig"],[229,57,194,37],[229,59,194,41],[230,0,195,6],[230,16,195,11,"_config"],[230,23,195,6],[230,26,195,21,"newConfig"],[230,35,195,6],[232,0,197,6,"RNGestureHandlerModule"],[232,42,197,29,"createGestureHandler"],[232,62,197,6],[232,63,198,8,"handlerName"],[232,74,197,6],[232,76,199,8],[232,82,199,13,"_handlerTag"],[232,93,197,6],[232,95,200,8,"newConfig"],[232,104,197,6],[233,0,202,5],[233,9,144,23],[235,0,144,23],[235,14,204,4,"_attachGestureHandler"],[235,35,144,23],[235,38,204,28],[235,48,204,28,"newViewTag"],[235,58,204,38],[235,60,204,42],[236,0,205,6],[236,16,205,11,"_viewTag"],[236,24,205,6],[236,27,205,22,"newViewTag"],[236,37,205,6],[238,0,207,6,"RNGestureHandlerModule"],[238,42,207,29,"attachGestureHandler"],[238,62,207,6],[238,63,207,50],[238,69,207,55,"_handlerTag"],[238,80,207,6],[238,82,207,68,"newViewTag"],[238,92,207,6],[239,0,208,5],[239,9,144,23],[241,0,144,23],[241,14,210,4,"_updateGestureHandler"],[241,35,144,23],[241,38,210,28],[241,48,210,28,"newConfig"],[241,57,210,37],[241,59,210,41],[242,0,211,6],[242,16,211,11,"_config"],[242,23,211,6],[242,26,211,21,"newConfig"],[242,35,211,6],[244,0,213,6,"RNGestureHandlerModule"],[244,42,213,29,"updateGestureHandler"],[244,62,213,6],[244,63,213,50],[244,69,213,55,"_handlerTag"],[244,80,213,6],[244,82,213,68,"newConfig"],[244,91,213,6],[245,0,214,5],[245,9,144,23],[247,0,146,6],[247,14,146,11,"_handlerTag"],[247,25,146,6],[247,28,146,25,"handlerTag"],[247,38,146,35],[247,40,146,6],[248,0,147,6],[248,14,147,11,"_config"],[248,21,147,6],[248,24,147,21],[248,26,147,6],[250,0,148,6],[250,12,148,10,"props"],[250,17,148,15],[250,18,148,16,"id"],[250,20,148,6],[250,22,148,20],[251,0,149,8],[251,14,149,12,"handlerIDToTag"],[251,28,149,26],[251,29,149,27,"props"],[251,34,149,32],[251,35,149,33,"id"],[251,37,149,26],[251,38,149,12],[251,43,149,41,"undefined"],[251,52,149,8],[251,54,149,52],[252,0,150,10],[252,18,150,16],[252,22,150,20,"Error"],[252,27,150,16],[252,51,150,46,"props"],[252,56,150,51],[252,57,150,52,"id"],[252,59,150,16],[252,86,150,10],[253,0,151,9],[255,0,152,8,"handlerIDToTag"],[255,10,152,8,"handlerIDToTag"],[255,24,152,22],[255,25,152,23,"props"],[255,30,152,28],[255,31,152,29,"id"],[255,33,152,22],[255,34,152,8],[255,37,152,35],[255,43,152,40,"_handlerTag"],[255,54,152,8],[256,0,153,7],[258,0,144,23],[259,0,154,5],[261,0,138,2],[262,0,138,2],[263,0,138,2],[263,47,216,27],[264,0,217,6,"RNGestureHandlerModule"],[264,42,217,29,"dropGestureHandler"],[264,60,217,6],[264,61,217,48],[264,66,217,53,"_handlerTag"],[264,77,217,6],[266,0,218,6],[266,14,218,10],[266,19,218,15,"_updateEnqueued"],[266,34,218,6],[266,36,218,32],[267,0,219,8,"clearImmediate"],[267,12,219,8,"clearImmediate"],[267,26,219,22],[267,27,219,23],[267,32,219,28,"_updateEnqueued"],[267,47,219,22],[267,48,219,8],[268,0,220,7],[270,0,221,6],[270,14,221,10],[270,19,221,15,"props"],[270,24,221,10],[270,25,221,21,"id"],[270,27,221,6],[270,29,221,25],[271,0,222,8],[271,19,222,15,"handlerIDToTag"],[271,33,222,29],[271,34,222,30],[271,39,222,35,"props"],[271,44,222,30],[271,45,222,41,"id"],[271,47,222,29],[271,48,222,8],[272,0,223,7],[273,0,224,5],[274,0,138,2],[275,0,138,2],[276,0,138,2],[276,44,226,24],[277,0,226,24],[279,0,227,6],[279,14,227,10,"hasUnresolvedRefs"],[279,31,227,27],[279,32,227,28],[279,37,227,33,"props"],[279,42,227,27],[279,43,227,6],[279,45,227,41],[280,0,234,8],[280,17,234,13,"_updateEnqueued"],[280,32,234,8],[280,35,234,31,"setImmediate"],[280,47,234,43],[280,48,234,44],[280,60,234,50],[281,0,235,10],[281,14,235,10],[281,20,235,14],[281,21,235,15,"_updateEnqueued"],[281,36,235,10],[281,39,235,33],[281,43,235,10],[283,0,236,10],[283,14,236,10],[283,20,236,14],[283,21,236,15,"_update"],[283,28,236,10],[284,0,237,9],[284,13,234,43],[284,14,234,8],[285,0,238,7],[287,0,240,6],[287,15,240,11,"_createGestureHandler"],[287,36,240,6],[287,37,241,8,"filterConfig"],[287,49,241,20],[287,50,242,10,"transformProps"],[287,64,242,24],[287,67,242,27,"transformProps"],[287,81,242,41],[287,82,242,42],[287,87,242,47,"props"],[287,92,242,41],[287,93,242,24],[287,96,242,56],[287,101,242,61,"props"],[287,106,241,20],[287,126,243,15],[287,131,243,20,"constructor"],[287,142,243,15],[287,143,243,32,"propTypes"],[287,152,241,20],[287,158,243,46,"customNativeProps"],[287,175,241,20],[287,178,244,10,"config"],[287,184,241,20],[287,185,240,6],[289,0,247,6],[289,15,247,11,"_attachGestureHandler"],[289,36,247,6],[289,37,247,33,"findNodeHandle"],[289,51,247,47],[289,52,247,48],[289,57,247,53,"_viewNode"],[289,66,247,47],[289,67,247,6],[290,0,248,5],[291,0,138,2],[292,0,138,2],[293,0,138,2],[293,45,250,25],[294,0,251,6],[294,14,251,12,"viewTag"],[294,21,251,19],[294,24,251,22,"findNodeHandle"],[294,38,251,36],[294,39,251,37],[294,44,251,42,"_viewNode"],[294,53,251,36],[294,54,251,6],[296,0,252,6],[296,14,252,10],[296,19,252,15,"_viewTag"],[296,27,252,10],[296,32,252,28,"viewTag"],[296,39,252,6],[296,41,252,37],[297,0,253,8],[297,17,253,13,"_attachGestureHandler"],[297,38,253,8],[297,39,253,35,"viewTag"],[297,46,253,8],[298,0,254,7],[300,0,255,6],[300,15,255,11,"_update"],[300,22,255,6],[301,0,256,5],[302,0,138,2],[303,0,138,2],[304,0,138,2],[304,34,258,14],[305,0,259,6],[305,14,259,12,"newConfig"],[305,23,259,21],[305,26,259,24,"filterConfig"],[305,38,259,36],[305,39,260,8,"transformProps"],[305,53,260,22],[305,56,260,25,"transformProps"],[305,70,260,39],[305,71,260,40],[305,76,260,45,"props"],[305,81,260,39],[305,82,260,22],[305,85,260,54],[305,90,260,59,"props"],[305,95,259,36],[305,115,261,13],[305,120,261,18,"constructor"],[305,131,261,13],[305,132,261,30,"propTypes"],[305,141,259,36],[305,147,261,44,"customNativeProps"],[305,164,259,36],[305,167,262,8,"config"],[305,173,259,36],[305,174,259,6],[307,0,264,6],[307,14,264,10],[307,15,264,11],[307,38,264,21],[307,43,264,26,"_config"],[307,50,264,11],[307,52,264,35,"newConfig"],[307,61,264,11],[307,62,264,6],[307,64,264,47],[308,0,265,8],[308,17,265,13,"_updateGestureHandler"],[308,38,265,8],[308,39,265,35,"newConfig"],[308,48,265,8],[309,0,266,7],[310,0,267,5],[311,0,138,2],[312,0,138,2],[313,0,138,2],[313,39,269,19,"updates"],[313,46,138,2],[313,48,269,28],[314,0,270,6],[314,14,270,12,"mergedProps"],[314,25,270,23],[314,46,270,31],[314,51,270,36,"props"],[314,56,270,23],[314,62,270,46,"updates"],[314,69,270,23],[314,70,270,6],[316,0,271,6],[316,14,271,12,"newConfig"],[316,23,271,21],[316,26,271,24,"filterConfig"],[316,38,271,36],[316,39,272,8,"transformProps"],[316,53,272,22],[316,56,272,25,"transformProps"],[316,70,272,39],[316,71,272,40,"mergedProps"],[316,82,272,39],[316,83,272,22],[316,86,272,55,"mergedProps"],[316,97,271,36],[316,117,273,13],[316,122,273,18,"constructor"],[316,133,273,13],[316,134,273,30,"propTypes"],[316,143,271,36],[316,149,273,44,"customNativeProps"],[316,166,271,36],[316,169,274,8,"config"],[316,175,271,36],[316,176,271,6],[318,0,276,6],[318,15,276,11,"_updateGestureHandler"],[318,36,276,6],[318,37,276,33,"newConfig"],[318,46,276,6],[319,0,277,5],[320,0,138,2],[321,0,138,2],[322,0,138,2],[322,33,279,13],[323,0,280,6],[323,14,280,10,"gestureEventHandler"],[323,33,280,29],[323,36,280,32],[323,41,280,37,"_onGestureHandlerEvent"],[323,63,280,6],[324,0,279,13],[324,28,281,56],[324,33,281,61,"props"],[324,38,279,13],[325,0,279,13],[325,14,281,14,"onGestureEvent"],[325,28,279,13],[325,43,281,14,"onGestureEvent"],[325,57,279,13],[326,0,279,13],[326,14,281,30,"onGestureHandlerEvent"],[326,35,279,13],[326,50,281,30,"onGestureHandlerEvent"],[326,71,279,13],[328,0,282,6],[328,14,282,10,"onGestureEvent"],[328,28,282,24],[328,32,282,28],[328,39,282,35,"onGestureEvent"],[328,53,282,28],[328,58,282,54],[328,68,282,6],[328,70,282,66],[329,0,286,8],[329,16,286,12,"onGestureHandlerEvent"],[329,37,286,8],[329,39,286,35],[330,0,287,10],[330,20,287,16],[330,24,287,20,"Error"],[330,29,287,16],[330,30,288,12],[330,103,287,16],[330,104,287,10],[331,0,290,9],[333,0,291,8,"gestureEventHandler"],[333,12,291,8,"gestureEventHandler"],[333,31,291,27],[333,34,291,30],[333,39,291,35,"props"],[333,44,291,30],[333,45,291,41,"onGestureEvent"],[333,59,291,8],[334,0,292,7],[334,11,282,6],[334,17,292,13],[335,0,293,8],[335,16,294,10,"onGestureHandlerEvent"],[335,37,294,31],[335,41,295,10],[335,48,295,17,"onGestureHandlerEvent"],[335,69,295,10],[335,74,295,43],[335,84,293,8],[335,86,296,10],[336,0,297,10],[336,20,297,16],[336,24,297,20,"Error"],[336,29,297,16],[336,30,298,12],[336,103,297,16],[336,104,297,10],[337,0,300,9],[338,0,301,7],[340,0,303,6],[340,14,303,10,"gestureStateEventHandler"],[340,38,303,34],[340,41,303,37],[340,46,303,42,"_onGestureHandlerStateChange"],[340,74,303,6],[341,0,279,13],[341,29,304,68],[341,34,304,73,"props"],[341,39,279,13],[342,0,279,13],[342,14,304,14,"onHandlerStateChange"],[342,34,279,13],[342,50,304,14,"onHandlerStateChange"],[342,70,279,13],[343,0,279,13],[343,14,304,36,"onGestureHandlerStateChange"],[343,41,279,13],[343,57,304,36,"onGestureHandlerStateChange"],[343,84,279,13],[345,0,305,6],[345,14,305,10,"onHandlerStateChange"],[345,34,305,30],[345,38,305,34],[345,45,305,41,"onHandlerStateChange"],[345,65,305,34],[345,70,305,66],[345,80,305,6],[345,82,305,78],[346,0,309,8],[346,16,309,12,"onGestureHandlerStateChange"],[346,43,309,8],[346,45,309,41],[347,0,310,10],[347,20,310,16],[347,24,310,20,"Error"],[347,29,310,16],[347,30,311,12],[347,103,310,16],[347,104,310,10],[348,0,313,9],[350,0,314,8,"gestureStateEventHandler"],[350,12,314,8,"gestureStateEventHandler"],[350,36,314,32],[350,39,314,35],[350,44,314,40,"props"],[350,49,314,35],[350,50,314,46,"onHandlerStateChange"],[350,70,314,8],[351,0,315,7],[351,11,305,6],[351,17,315,13],[352,0,316,8],[352,16,317,10,"onGestureHandlerStateChange"],[352,43,317,37],[352,47,318,10],[352,54,318,17,"onGestureHandlerStateChange"],[352,81,318,10],[352,86,318,49],[352,96,316,8],[352,98,319,10],[353,0,320,10],[353,20,320,16],[353,24,320,20,"Error"],[353,29,320,16],[353,30,321,12],[353,103,320,16],[353,104,320,10],[354,0,323,9],[355,0,324,7],[357,0,326,6],[357,14,326,12,"child"],[357,19,326,17],[357,22,326,20,"React"],[357,37,326,26,"Children"],[357,45,326,20],[357,46,326,35,"only"],[357,50,326,20],[357,51,326,40],[357,56,326,45,"props"],[357,61,326,40],[357,62,326,51,"children"],[357,70,326,20],[357,71,326,6],[359,0,327,6],[359,14,327,10,"grandChildren"],[359,27,327,23],[359,30,327,26,"child"],[359,35,327,31],[359,36,327,32,"props"],[359,41,327,26],[359,42,327,38,"children"],[359,50,327,6],[361,0,328,6],[361,14,329,8,"Touchable"],[361,37,329,18,"TOUCH_TARGET_DEBUG"],[361,55,329,8],[361,59,330,8,"child"],[361,64,330,13],[361,65,330,14,"type"],[361,69,329,8],[361,74,331,9,"child"],[361,79,331,14],[361,80,331,15,"type"],[361,84,331,9],[361,89,331,24],[361,113,331,9],[361,117,332,10,"child"],[361,122,332,15],[361,123,332,16,"type"],[361,127,332,10],[361,128,332,21,"name"],[361,132,332,10],[361,137,332,30],[361,143,331,9],[361,147,333,10,"child"],[361,152,333,15],[361,153,333,16,"type"],[361,157,333,10],[361,158,333,21,"displayName"],[361,169,333,10],[361,174,333,37],[361,180,329,8],[361,181,328,6],[361,183,334,8],[362,0,335,8,"grandChildren"],[362,12,335,8,"grandChildren"],[362,25,335,21],[362,28,335,24,"React"],[362,43,335,30,"Children"],[362,51,335,24],[362,52,335,39,"toArray"],[362,59,335,24],[362,60,335,47,"grandChildren"],[362,73,335,24],[362,74,335,8],[363,0,336,8,"grandChildren"],[363,12,336,8,"grandChildren"],[363,25,336,21],[363,26,336,22,"push"],[363,30,336,8],[363,31,337,10,"Touchable"],[363,54,337,20,"renderDebugView"],[363,69,337,10],[363,70,337,36],[364,0,338,12,"color"],[364,14,338,12,"color"],[364,19,338,17],[364,21,338,19],[364,40,337,36],[365,0,339,12,"hitSlop"],[365,14,339,12,"hitSlop"],[365,21,339,19],[365,23,339,21,"child"],[365,28,339,26],[365,29,339,27,"props"],[365,34,339,21],[365,35,339,33,"hitSlop"],[366,0,337,36],[366,13,337,10],[366,14,336,8],[367,0,342,7],[369,0,343,6],[369,17,343,13,"React"],[369,32,343,19,"cloneElement"],[369,44,343,13],[369,45,344,8,"child"],[369,50,343,13],[369,52,345,8],[370,0,346,10,"ref"],[370,12,346,10,"ref"],[370,15,346,13],[370,17,346,15],[370,22,346,20,"_refHandler"],[370,33,345,8],[371,0,347,10,"collapsable"],[371,12,347,10,"collapsable"],[371,23,347,21],[371,25,347,23],[371,30,345,8],[372,0,348,10,"onGestureHandlerEvent"],[372,12,348,10,"onGestureHandlerEvent"],[372,33,348,31],[372,35,348,33,"gestureEventHandler"],[372,54,345,8],[373,0,349,10,"onGestureHandlerStateChange"],[373,12,349,10,"onGestureHandlerStateChange"],[373,39,349,37],[373,41,349,39,"gestureStateEventHandler"],[374,0,345,8],[374,11,343,13],[374,13,351,8,"grandChildren"],[374,26,343,13],[374,27,343,6],[375,0,353,5],[376,0,138,2],[377,0,138,2],[378,0,138,2],[378,6,139,24,"React"],[378,21,139,30,"Component"],[378,30,138,2],[380,0,139,8,"Handler"],[380,4,139,8,"Handler"],[380,11,138,2],[380,12,140,11,"displayName"],[380,23,138,2],[380,26,140,25,"handlerName"],[380,37,138,2],[381,0,139,8,"Handler"],[381,4,139,8,"Handler"],[381,11,138,2],[381,12,142,11,"propTypes"],[381,21,138,2],[381,24,142,23,"propTypes"],[381,33,138,2],[382,0,138,2],[383,0,355,2],[383,11,355,9,"Handler"],[383,18,355,2],[384,0,356,1]]},"type":"js/module"}]}