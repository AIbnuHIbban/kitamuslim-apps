{"dependencies":[{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"./BatchedBridge","data":{"isAsync":false}},{"name":"invariant","data":{"isAsync":false}},{"name":"../Utilities/defineLazyObjectProperty","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _objectWithoutProperties = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/objectWithoutProperties\");\n\n  var _extends = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/extends\");\n\n  var _slicedToArray = _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/slicedToArray\");\n\n  var BatchedBridge = _$$_REQUIRE(_dependencyMap[3], \"./BatchedBridge\");\n\n  var invariant = _$$_REQUIRE(_dependencyMap[4], \"invariant\");\n\n  function genModule(config, moduleID) {\n    if (!config) {\n      return null;\n    }\n\n    var _config = _slicedToArray(config, 5),\n        moduleName = _config[0],\n        constants = _config[1],\n        methods = _config[2],\n        promiseMethods = _config[3],\n        syncMethods = _config[4];\n\n    invariant(!moduleName.startsWith('RCT') && !moduleName.startsWith('RK'), \"Module name prefixes should've been stripped by the native side \" + \"but wasn't for \" + moduleName);\n\n    if (!constants && !methods) {\n      return {\n        name: moduleName\n      };\n    }\n\n    var module = {};\n    methods && methods.forEach(function (methodName, methodID) {\n      var isPromise = promiseMethods && arrayContains(promiseMethods, methodID);\n      var isSync = syncMethods && arrayContains(syncMethods, methodID);\n      invariant(!isPromise || !isSync, 'Cannot have a method that is both async and a sync hook');\n      var methodType = isPromise ? 'promise' : isSync ? 'sync' : 'async';\n      module[methodName] = genMethod(moduleID, methodID, methodType);\n    });\n\n    _extends(module, constants);\n\n    if (module.getConstants == null) {\n      module.getConstants = function () {\n        return constants || Object.freeze({});\n      };\n    } else {\n      console.warn(\"Unable to define method 'getConstants()' on NativeModule '\" + moduleName + \"'. NativeModule '\" + moduleName + \"' already has a constant or method called 'getConstants'. Please remove it.\");\n    }\n\n    if (__DEV__) {\n      BatchedBridge.createDebugLookup(moduleID, moduleName, methods);\n    }\n\n    return {\n      name: moduleName,\n      module: module\n    };\n  }\n\n  global.__fbGenNativeModule = genModule;\n\n  function loadModule(name, moduleID) {\n    invariant(global.nativeRequireModuleConfig, \"Can't lazily create module without nativeRequireModuleConfig\");\n    var config = global.nativeRequireModuleConfig(name);\n    var info = genModule(config, moduleID);\n    return info && info.module;\n  }\n\n  function genMethod(moduleID, methodID, type) {\n    var fn = null;\n\n    if (type === 'promise') {\n      fn = function fn() {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return new Promise(function (resolve, reject) {\n          BatchedBridge.enqueueNativeCall(moduleID, methodID, args, function (data) {\n            return resolve(data);\n          }, function (errorData) {\n            return reject(createErrorFromErrorData(errorData));\n          });\n        });\n      };\n    } else {\n      fn = function fn() {\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        var lastArg = args.length > 0 ? args[args.length - 1] : null;\n        var secondLastArg = args.length > 1 ? args[args.length - 2] : null;\n        var hasSuccessCallback = typeof lastArg === 'function';\n        var hasErrorCallback = typeof secondLastArg === 'function';\n        hasErrorCallback && invariant(hasSuccessCallback, 'Cannot have a non-function arg after a function arg.');\n        var onSuccess = hasSuccessCallback ? lastArg : null;\n        var onFail = hasErrorCallback ? secondLastArg : null;\n        var callbackCount = hasSuccessCallback + hasErrorCallback;\n        args = args.slice(0, args.length - callbackCount);\n\n        if (type === 'sync') {\n          return BatchedBridge.callNativeSyncHook(moduleID, methodID, args, onFail, onSuccess);\n        } else {\n          BatchedBridge.enqueueNativeCall(moduleID, methodID, args, onFail, onSuccess);\n        }\n      };\n    }\n\n    fn.type = type;\n    return fn;\n  }\n\n  function arrayContains(array, value) {\n    return array.indexOf(value) !== -1;\n  }\n\n  function createErrorFromErrorData(errorData) {\n    var _ref = errorData || {},\n        message = _ref.message,\n        extraErrorInfo = _objectWithoutProperties(_ref, [\"message\"]);\n\n    var error = new Error(message);\n    error.framesToPop = 1;\n    return _extends(error, extraErrorInfo);\n  }\n\n  var NativeModules = {};\n\n  if (global.nativeModuleProxy) {\n    NativeModules = global.nativeModuleProxy;\n  } else if (!global.nativeExtensions) {\n    var bridgeConfig = global.__fbBatchedBridgeConfig;\n    invariant(bridgeConfig, '__fbBatchedBridgeConfig is not set, cannot invoke native modules');\n\n    var defineLazyObjectProperty = _$$_REQUIRE(_dependencyMap[5], \"../Utilities/defineLazyObjectProperty\");\n\n    (bridgeConfig.remoteModuleConfig || []).forEach(function (config, moduleID) {\n      var info = genModule(config, moduleID);\n\n      if (!info) {\n        return;\n      }\n\n      if (info.module) {\n        NativeModules[info.name] = info.module;\n      } else {\n          defineLazyObjectProperty(NativeModules, info.name, {\n            get: function get() {\n              return loadModule(info.name, moduleID);\n            }\n          });\n        }\n    });\n  }\n\n  module.exports = NativeModules;\n});","map":[[2,0,11,0],[10,0,13,0],[10,6,13,6,"BatchedBridge"],[10,19,13,19],[10,22,13,22,"require"],[10,33,13,29],[10,71,13,0],[12,0,15,0],[12,6,15,6,"invariant"],[12,15,15,15],[12,18,15,18,"require"],[12,29,15,25],[12,61,15,0],[14,0,29,0],[14,11,29,9,"genModule"],[14,20,29,0],[14,21,30,2,"config"],[14,27,29,0],[14,29,31,2,"moduleID"],[14,37,29,0],[14,39,32,36],[15,0,33,2],[15,8,33,6],[15,9,33,7,"config"],[15,15,33,2],[15,17,33,15],[16,0,34,4],[16,13,34,11],[16,17,34,4],[17,0,35,3],[19,0,32,36],[19,33,37,72,"config"],[19,39,32,36],[20,0,32,36],[20,8,37,9,"moduleName"],[20,18,32,36],[21,0,32,36],[21,8,37,21,"constants"],[21,17,32,36],[22,0,32,36],[22,8,37,32,"methods"],[22,15,32,36],[23,0,32,36],[23,8,37,41,"promiseMethods"],[23,22,32,36],[24,0,32,36],[24,8,37,57,"syncMethods"],[24,19,32,36],[26,0,38,2,"invariant"],[26,4,38,2,"invariant"],[26,13,38,11],[26,14,39,4],[26,15,39,5,"moduleName"],[26,25,39,15],[26,26,39,16,"startsWith"],[26,36,39,5],[26,37,39,27],[26,42,39,5],[26,43,39,4],[26,47,39,37],[26,48,39,38,"moduleName"],[26,58,39,48],[26,59,39,49,"startsWith"],[26,69,39,38],[26,70,39,60],[26,74,39,38],[26,75,38,11],[26,77,40,4],[26,146,41,6],[26,163,40,4],[26,166,42,6,"moduleName"],[26,176,38,11],[26,177,38,2],[28,0,45,2],[28,8,45,6],[28,9,45,7,"constants"],[28,18,45,6],[28,22,45,20],[28,23,45,21,"methods"],[28,30,45,2],[28,32,45,30],[29,0,47,4],[29,13,47,11],[30,0,47,12,"name"],[30,8,47,12,"name"],[30,12,47,16],[30,14,47,18,"moduleName"],[31,0,47,11],[31,7,47,4],[32,0,48,3],[34,0,50,2],[34,8,50,8,"module"],[34,14,50,14],[34,17,50,17],[34,19,50,2],[35,0,51,2,"methods"],[35,4,51,2,"methods"],[35,11,51,9],[35,15,52,4,"methods"],[35,22,52,11],[35,23,52,12,"forEach"],[35,30,52,4],[35,31,52,20],[35,41,52,21,"methodName"],[35,51,52,20],[35,53,52,33,"methodID"],[35,61,52,20],[35,63,52,46],[36,0,53,6],[36,10,53,12,"isPromise"],[36,19,53,21],[36,22,54,8,"promiseMethods"],[36,36,54,22],[36,40,54,26,"arrayContains"],[36,53,54,39],[36,54,54,40,"promiseMethods"],[36,68,54,39],[36,70,54,56,"methodID"],[36,78,54,39],[36,79,53,6],[37,0,55,6],[37,10,55,12,"isSync"],[37,16,55,18],[37,19,55,21,"syncMethods"],[37,30,55,32],[37,34,55,36,"arrayContains"],[37,47,55,49],[37,48,55,50,"syncMethods"],[37,59,55,49],[37,61,55,63,"methodID"],[37,69,55,49],[37,70,55,6],[38,0,56,6,"invariant"],[38,6,56,6,"invariant"],[38,15,56,15],[38,16,57,8],[38,17,57,9,"isPromise"],[38,26,57,8],[38,30,57,22],[38,31,57,23,"isSync"],[38,37,56,15],[38,39,58,8],[38,96,56,15],[38,97,56,6],[39,0,60,6],[39,10,60,12,"methodType"],[39,20,60,22],[39,23,60,25,"isPromise"],[39,32,60,34],[39,35,60,37],[39,44,60,34],[39,47,60,49,"isSync"],[39,53,60,55],[39,56,60,58],[39,62,60,55],[39,65,60,67],[39,72,60,6],[40,0,61,6,"module"],[40,6,61,6,"module"],[40,12,61,12],[40,13,61,13,"methodName"],[40,23,61,12],[40,24,61,6],[40,27,61,27,"genMethod"],[40,36,61,36],[40,37,61,37,"moduleID"],[40,45,61,36],[40,47,61,47,"methodID"],[40,55,61,36],[40,57,61,57,"methodType"],[40,67,61,36],[40,68,61,6],[41,0,62,5],[41,5,52,4],[41,6,51,2],[43,0,64,2],[43,13,64,16,"module"],[43,19,64,2],[43,21,64,24,"constants"],[43,30,64,2],[45,0,66,2],[45,8,66,6,"module"],[45,14,66,12],[45,15,66,13,"getConstants"],[45,27,66,6],[45,31,66,29],[45,35,66,2],[45,37,66,35],[46,0,67,4,"module"],[46,6,67,4,"module"],[46,12,67,10],[46,13,67,11,"getConstants"],[46,25,67,4],[46,28,67,26],[47,0,67,26],[47,15,67,32,"constants"],[47,24,67,41],[47,28,67,45,"Object"],[47,34,67,51],[47,35,67,52,"freeze"],[47,41,67,45],[47,42,67,59],[47,44,67,45],[47,45,67,26],[48,0,67,26],[48,7,67,4],[49,0,68,3],[49,5,66,2],[49,11,68,9],[50,0,69,4,"console"],[50,6,69,4,"console"],[50,13,69,11],[50,14,69,12,"warn"],[50,18,69,4],[50,82,70,67,"moduleName"],[50,92,69,4],[50,117,70,97,"moduleName"],[50,127,69,4],[51,0,72,3],[53,0,74,2],[53,8,74,6,"__DEV__"],[53,15,74,2],[53,17,74,15],[54,0,75,4,"BatchedBridge"],[54,6,75,4,"BatchedBridge"],[54,19,75,17],[54,20,75,18,"createDebugLookup"],[54,37,75,4],[54,38,75,36,"moduleID"],[54,46,75,4],[54,48,75,46,"moduleName"],[54,58,75,4],[54,60,75,58,"methods"],[54,67,75,4],[55,0,76,3],[57,0,78,2],[57,11,78,9],[58,0,78,10,"name"],[58,6,78,10,"name"],[58,10,78,14],[58,12,78,16,"moduleName"],[58,22,78,9],[59,0,78,28,"module"],[59,6,78,28,"module"],[59,12,78,34],[59,14,78,28,"module"],[60,0,78,9],[60,5,78,2],[61,0,79,1],[63,0,82,0,"global"],[63,2,82,0,"global"],[63,8,82,6],[63,9,82,7,"__fbGenNativeModule"],[63,28,82,0],[63,31,82,29,"genModule"],[63,40,82,0],[65,0,84,0],[65,11,84,9,"loadModule"],[65,21,84,0],[65,22,84,20,"name"],[65,26,84,0],[65,28,84,34,"moduleID"],[65,36,84,0],[65,38,84,61],[66,0,85,2,"invariant"],[66,4,85,2,"invariant"],[66,13,85,11],[66,14,86,4,"global"],[66,20,86,10],[66,21,86,11,"nativeRequireModuleConfig"],[66,46,85,11],[66,48,87,4],[66,110,85,11],[66,111,85,2],[67,0,89,2],[67,8,89,8,"config"],[67,14,89,14],[67,17,89,17,"global"],[67,23,89,23],[67,24,89,24,"nativeRequireModuleConfig"],[67,49,89,17],[67,50,89,50,"name"],[67,54,89,17],[67,55,89,2],[68,0,90,2],[68,8,90,8,"info"],[68,12,90,12],[68,15,90,15,"genModule"],[68,24,90,24],[68,25,90,25,"config"],[68,31,90,24],[68,33,90,33,"moduleID"],[68,41,90,24],[68,42,90,2],[69,0,91,2],[69,11,91,9,"info"],[69,15,91,13],[69,19,91,17,"info"],[69,23,91,21],[69,24,91,22,"module"],[69,30,91,2],[70,0,92,1],[72,0,94,0],[72,11,94,9,"genMethod"],[72,20,94,0],[72,21,94,19,"moduleID"],[72,29,94,0],[72,31,94,37,"methodID"],[72,39,94,0],[72,41,94,55,"type"],[72,45,94,0],[72,47,94,73],[73,0,95,2],[73,8,95,6,"fn"],[73,10,95,8],[73,13,95,11],[73,17,95,2],[75,0,96,2],[75,8,96,6,"type"],[75,12,96,10],[75,17,96,15],[75,26,96,2],[75,28,96,26],[76,0,97,4,"fn"],[76,6,97,4,"fn"],[76,8,97,6],[76,11,97,9],[76,25,97,39],[77,0,97,39],[77,42,97,21,"args"],[77,46,97,39],[78,0,97,21,"args"],[78,10,97,21,"args"],[78,14,97,39],[79,0,97,39],[81,0,98,6],[81,15,98,13],[81,19,98,17,"Promise"],[81,26,98,13],[81,27,98,25],[81,37,98,26,"resolve"],[81,44,98,25],[81,46,98,35,"reject"],[81,52,98,25],[81,54,98,46],[82,0,99,8,"BatchedBridge"],[82,10,99,8,"BatchedBridge"],[82,23,99,21],[82,24,99,22,"enqueueNativeCall"],[82,41,99,8],[82,42,100,10,"moduleID"],[82,50,99,8],[82,52,101,10,"methodID"],[82,60,99,8],[82,62,102,10,"args"],[82,66,99,8],[82,68,103,10],[82,78,103,10,"data"],[82,82,103,14],[83,0,103,14],[83,19,103,18,"resolve"],[83,26,103,25],[83,27,103,26,"data"],[83,31,103,25],[83,32,103,14],[84,0,103,14],[84,11,99,8],[84,13,104,10],[84,23,104,10,"errorData"],[84,32,104,19],[85,0,104,19],[85,19,104,23,"reject"],[85,25,104,29],[85,26,104,30,"createErrorFromErrorData"],[85,50,104,54],[85,51,104,55,"errorData"],[85,60,104,54],[85,61,104,29],[85,62,104,19],[86,0,104,19],[86,11,99,8],[87,0,106,7],[87,9,98,13],[87,10,98,6],[88,0,107,5],[88,7,97,4],[89,0,108,3],[89,5,96,2],[89,11,108,9],[90,0,109,4,"fn"],[90,6,109,4,"fn"],[90,8,109,6],[90,11,109,9],[90,25,109,39],[91,0,109,39],[91,43,109,21,"args"],[91,47,109,39],[92,0,109,21,"args"],[92,10,109,21,"args"],[92,14,109,39],[93,0,109,39],[95,0,110,6],[95,12,110,12,"lastArg"],[95,19,110,19],[95,22,110,22,"args"],[95,26,110,26],[95,27,110,27,"length"],[95,33,110,22],[95,36,110,36],[95,37,110,22],[95,40,110,40,"args"],[95,44,110,44],[95,45,110,45,"args"],[95,49,110,49],[95,50,110,50,"length"],[95,56,110,45],[95,59,110,59],[95,60,110,44],[95,61,110,22],[95,64,110,64],[95,68,110,6],[96,0,111,6],[96,12,111,12,"secondLastArg"],[96,25,111,25],[96,28,111,28,"args"],[96,32,111,32],[96,33,111,33,"length"],[96,39,111,28],[96,42,111,42],[96,43,111,28],[96,46,111,46,"args"],[96,50,111,50],[96,51,111,51,"args"],[96,55,111,55],[96,56,111,56,"length"],[96,62,111,51],[96,65,111,65],[96,66,111,50],[96,67,111,28],[96,70,111,70],[96,74,111,6],[97,0,112,6],[97,12,112,12,"hasSuccessCallback"],[97,30,112,30],[97,33,112,33],[97,40,112,40,"lastArg"],[97,47,112,33],[97,52,112,52],[97,62,112,6],[98,0,113,6],[98,12,113,12,"hasErrorCallback"],[98,28,113,28],[98,31,113,31],[98,38,113,38,"secondLastArg"],[98,51,113,31],[98,56,113,56],[98,66,113,6],[99,0,114,6,"hasErrorCallback"],[99,8,114,6,"hasErrorCallback"],[99,24,114,22],[99,28,115,8,"invariant"],[99,37,115,17],[99,38,116,10,"hasSuccessCallback"],[99,56,115,17],[99,58,117,10],[99,112,115,17],[99,113,114,6],[100,0,119,6],[100,12,119,12,"onSuccess"],[100,21,119,21],[100,24,119,24,"hasSuccessCallback"],[100,42,119,42],[100,45,119,45,"lastArg"],[100,52,119,42],[100,55,119,55],[100,59,119,6],[101,0,120,6],[101,12,120,12,"onFail"],[101,18,120,18],[101,21,120,21,"hasErrorCallback"],[101,37,120,37],[101,40,120,40,"secondLastArg"],[101,53,120,37],[101,56,120,56],[101,60,120,6],[102,0,121,6],[102,12,121,12,"callbackCount"],[102,25,121,25],[102,28,121,28,"hasSuccessCallback"],[102,46,121,46],[102,49,121,49,"hasErrorCallback"],[102,65,121,6],[103,0,122,6,"args"],[103,8,122,6,"args"],[103,12,122,10],[103,15,122,13,"args"],[103,19,122,17],[103,20,122,18,"slice"],[103,25,122,13],[103,26,122,24],[103,27,122,13],[103,29,122,27,"args"],[103,33,122,31],[103,34,122,32,"length"],[103,40,122,27],[103,43,122,41,"callbackCount"],[103,56,122,13],[103,57,122,6],[105,0,123,6],[105,12,123,10,"type"],[105,16,123,14],[105,21,123,19],[105,27,123,6],[105,29,123,27],[106,0,124,8],[106,17,124,15,"BatchedBridge"],[106,30,124,28],[106,31,124,29,"callNativeSyncHook"],[106,49,124,15],[106,50,125,10,"moduleID"],[106,58,124,15],[106,60,126,10,"methodID"],[106,68,124,15],[106,70,127,10,"args"],[106,74,124,15],[106,76,128,10,"onFail"],[106,82,124,15],[106,84,129,10,"onSuccess"],[106,93,124,15],[106,94,124,8],[107,0,131,7],[107,9,123,6],[107,15,131,13],[108,0,132,8,"BatchedBridge"],[108,10,132,8,"BatchedBridge"],[108,23,132,21],[108,24,132,22,"enqueueNativeCall"],[108,41,132,8],[108,42,133,10,"moduleID"],[108,50,132,8],[108,52,134,10,"methodID"],[108,60,132,8],[108,62,135,10,"args"],[108,66,132,8],[108,68,136,10,"onFail"],[108,74,132,8],[108,76,137,10,"onSuccess"],[108,85,132,8],[109,0,139,7],[110,0,140,5],[110,7,109,4],[111,0,141,3],[113,0,142,2,"fn"],[113,4,142,2,"fn"],[113,6,142,4],[113,7,142,5,"type"],[113,11,142,2],[113,14,142,12,"type"],[113,18,142,2],[114,0,143,2],[114,11,143,9,"fn"],[114,13,143,2],[115,0,144,1],[117,0,146,0],[117,11,146,9,"arrayContains"],[117,24,146,0],[117,25,146,26,"array"],[117,30,146,0],[117,32,146,43,"value"],[117,37,146,0],[117,39,146,62],[118,0,147,2],[118,11,147,9,"array"],[118,16,147,14],[118,17,147,15,"indexOf"],[118,24,147,9],[118,25,147,23,"value"],[118,30,147,9],[118,36,147,34],[118,37,147,35],[118,38,147,2],[119,0,148,1],[121,0,150,0],[121,11,150,9,"createErrorFromErrorData"],[121,35,150,0],[121,36,150,34,"errorData"],[121,45,150,0],[121,47,150,79],[122,0,150,79],[122,15,151,39,"errorData"],[122,24,151,48],[122,28,151,52],[122,30,150,79],[123,0,150,79],[123,8,151,9,"message"],[123,15,150,79],[123,23,151,9,"message"],[123,30,150,79],[124,0,150,79],[124,8,151,21,"extraErrorInfo"],[124,22,150,79],[126,0,152,2],[126,8,152,8,"error"],[126,13,152,28],[126,16,152,31],[126,20,152,35,"Error"],[126,25,152,31],[126,26,152,41,"message"],[126,33,152,31],[126,34,152,2],[127,0,153,2,"error"],[127,4,153,2,"error"],[127,9,153,7],[127,10,153,8,"framesToPop"],[127,21,153,2],[127,24,153,22],[127,25,153,2],[128,0,154,2],[128,11,154,9],[128,20,154,23,"error"],[128,25,154,9],[128,27,154,30,"extraErrorInfo"],[128,41,154,9],[128,42,154,2],[129,0,155,1],[131,0,157,0],[131,6,157,4,"NativeModules"],[131,19,157,49],[131,22,157,52],[131,24,157,0],[133,0,158,0],[133,6,158,4,"global"],[133,12,158,10],[133,13,158,11,"nativeModuleProxy"],[133,30,158,0],[133,32,158,30],[134,0,159,2,"NativeModules"],[134,4,159,2,"NativeModules"],[134,17,159,15],[134,20,159,18,"global"],[134,26,159,24],[134,27,159,25,"nativeModuleProxy"],[134,44,159,2],[135,0,160,1],[135,3,158,0],[135,9,160,7],[135,13,160,11],[135,14,160,12,"global"],[135,20,160,18],[135,21,160,19,"nativeExtensions"],[135,37,160,7],[135,39,160,37],[136,0,161,2],[136,8,161,8,"bridgeConfig"],[136,20,161,20],[136,23,161,23,"global"],[136,29,161,29],[136,30,161,30,"__fbBatchedBridgeConfig"],[136,53,161,2],[137,0,162,2,"invariant"],[137,4,162,2,"invariant"],[137,13,162,11],[137,14,163,4,"bridgeConfig"],[137,26,162,11],[137,28,164,4],[137,94,162,11],[137,95,162,2],[139,0,167,2],[139,8,167,8,"defineLazyObjectProperty"],[139,32,167,32],[139,35,167,35,"require"],[139,46,167,42],[139,106,167,2],[141,0,168,2],[141,5,168,3,"bridgeConfig"],[141,17,168,15],[141,18,168,16,"remoteModuleConfig"],[141,36,168,3],[141,40,168,38],[141,42,168,2],[141,44,168,42,"forEach"],[141,51,168,2],[141,52,169,4],[141,62,169,5,"config"],[141,68,169,4],[141,70,169,27,"moduleID"],[141,78,169,4],[141,80,169,48],[142,0,172,6],[142,10,172,12,"info"],[142,14,172,16],[142,17,172,19,"genModule"],[142,26,172,28],[142,27,172,29,"config"],[142,33,172,28],[142,35,172,37,"moduleID"],[142,43,172,28],[142,44,172,6],[144,0,173,6],[144,10,173,10],[144,11,173,11,"info"],[144,15,173,6],[144,17,173,17],[145,0,174,8],[146,0,175,7],[148,0,177,6],[148,10,177,10,"info"],[148,14,177,14],[148,15,177,15,"module"],[148,21,177,6],[148,23,177,23],[149,0,178,8,"NativeModules"],[149,8,178,8,"NativeModules"],[149,21,178,21],[149,22,178,22,"info"],[149,26,178,26],[149,27,178,27,"name"],[149,31,178,21],[149,32,178,8],[149,35,178,35,"info"],[149,39,178,39],[149,40,178,40,"module"],[149,46,178,8],[150,0,179,7],[150,7,177,6],[150,13,181,11],[151,0,182,8,"defineLazyObjectProperty"],[151,10,182,8,"defineLazyObjectProperty"],[151,34,182,32],[151,35,182,33,"NativeModules"],[151,48,182,32],[151,50,182,48,"info"],[151,54,182,52],[151,55,182,53,"name"],[151,59,182,32],[151,61,182,59],[152,0,183,10,"get"],[152,12,183,10,"get"],[152,15,183,13],[152,17,183,15],[153,0,183,15],[153,21,183,21,"loadModule"],[153,31,183,31],[153,32,183,32,"info"],[153,36,183,36],[153,37,183,37,"name"],[153,41,183,31],[153,43,183,43,"moduleID"],[153,51,183,31],[153,52,183,15],[154,0,183,15],[155,0,182,59],[155,11,182,32],[155,12,182,8],[156,0,185,7],[157,0,186,5],[157,5,168,2],[158,0,188,1],[160,0,190,0,"module"],[160,2,190,0,"module"],[160,8,190,6],[160,9,190,7,"exports"],[160,16,190,0],[160,19,190,17,"NativeModules"],[160,32,190,0]]},"type":"js/module"}]}